name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./internal/...
  
  check:
    needs: build
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "GIN_MODE=${{ secrets.GIN_MODE }}" >> .env
        echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
        echo "JWT_SECRET_REFRESH_KEY=${{ secrets.JWT_SECRET_REFRESH_KEY }}" >> .env
        echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
        echo "LOG_OUTPUT=${{ secrets.LOG_OUTPUT }}" >> .env
        echo "AUTHORIZATION_URL=${{ secrets.AUTHORIZATION_URL }}" >> .env
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_URL=${{ secrets.POSTGRES_URL }}" >> .env

    - name: Run project
      run: make ci

    - name: Set up Go for E2E tests
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod

    - name: Run E2E tests
      run: go test -v ./e2e/...

    - if: failure()
      run: docker-compose ps

    - if: failure()
      run: docker-compose logs
